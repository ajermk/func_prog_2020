<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7cbfd0b0-3900-4946-a9ff-989745994da4" name="Default Changelist" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="$APPLICATION_HOME_DIR$/plugins/maven/lib/maven3" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1l7WroOOB4bqV8pCvhZkRLE4y8b" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
  </component>
  <component name="ReplState" timestamp="1607422806333">{:repl-history {:ide [], :local [{:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))])\n  )&quot;, :offset 76, :ns &quot;ld4.core&quot;} {:command &quot;(encrypt \&quot;bitch\&quot; n)&quot;, :offset 19, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))]\n    (printf string-to-char))\n  )&quot;, :offset 104, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))]\n    (print string-to-char))\n  )&quot;, :offset 103, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))\n         array-x-length (count (string-to-char))]\n    (print array-x-length))\n  )&quot;, :offset 152, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))\n         array-x-length (count str)]\n    (print array-x-length))\n  )&quot;, :offset 139, :ns &quot;ld4.core&quot;} {:command &quot;\n(use 'clojure.core)\n(require '[clojure.string :as str])&quot;, :offset 56, :ns &quot;ld4.core&quot;} {:command &quot;(str/replace (seq (char-array \&quot;test 1 2\&quot;)) #\&quot; \&quot; \&quot;_\&quot;)&quot;, :offset 52, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt\n  [str n]\n  ( let [string-to-char (seq (char-array str))\n         array-x-length (count str)\n         replace-space (str/replace string-to-char #\&quot; \&quot; \&quot;_\&quot;)]\n    (print replace-space)\n    )\n  )&quot;, :offset 204, :ns &quot;ld4.core&quot;} {:command &quot;(encrypt \&quot;bitch\&quot; 6)&quot;, :offset 19, :ns &quot;ld4.core&quot;} {:command &quot;(seq (char-array (str/replace \&quot;1 2 test\&quot; #\&quot; \&quot; \&quot;_\&quot;)))&quot;, :offset 52, :ns &quot;ld4.core&quot;} {:command &quot;(str/join (seq (char-array (str/replace \&quot;1 2 test\&quot; #\&quot; \&quot; \&quot;_\&quot;))))&quot;, :offset 63, :ns &quot;ld4.core&quot;} {:command &quot;(defn replace-space [str]\n  (str/replace str #\&quot; \&quot; \&quot;_\&quot;))&quot;, :offset 55, :ns &quot;ld4.core&quot;} {:command &quot;(replace-space \&quot;bitch\&quot;)&quot;, :offset 23, :ns &quot;ld4.core&quot;} {:command &quot;(defn replace-space [str]\n  (str/replace str \&quot; \&quot; \&quot;_\&quot;))&quot;, :offset 54, :ns &quot;ld4.core&quot;} {:command &quot;(replace-space \&quot;bitch suck\&quot;)&quot;, :offset 28, :ns &quot;ld4.core&quot;} {:command &quot;(defn index_calculation [width height]\n  (def row 0)\n  (def direction-down false)\n  (vec\n    (for [col (range 0 width)] (do\n                                 (if (or (= 0 row) (= row (- height 1)))\n                                   (def direction-down (not direction-down)))\n                                 (def matrix-index (+ (* row width) col))\n                                 (def row\n                                   (if (true? direction-down)\n                                     (inc row)\n                                     (dec row)))\n                                 matrix-index\n                                 ))\n    )\n  )&quot;, :offset 640, :ns &quot;ld4.core&quot;} {:command &quot;(defn get-encrypt-chars [message key]\n  (zipmap\n    (index_calculation (count message) key)\n    (vec message))\n  )&quot;, :offset 114, :ns &quot;ld4.core&quot;} {:command &quot;(get-encrypt-chars [\&quot;we can do it\&quot;, 3])&quot;, :offset 39, :ns &quot;ld4.core&quot;} {:command &quot;(defn encrypt [message key]\n  (str/join\n    (for [[pos char]\n          (sort-by first (get-encrypt-chars message key))\n          ] char)\n    )\n  )&quot;, :offset 146, :ns &quot;ld4.core&quot;} {:command &quot;(defn string-to-char [str]\n  (seq (char-array str)))&quot;, :offset 52, :ns &quot;ld4.core&quot;} {:command &quot;(string-to-char \&quot;bitch ko\&quot;)&quot;, :offset 27, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;) 1 2)&quot;, :offset 48, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch ko\&quot;) \&quot;1\&quot;)&quot;, :offset 46, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch ko\&quot;) :1)&quot;, :offset 45, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch ko\&quot;))&quot;, :offset 42, :ns &quot;ld4.core&quot;} {:command &quot;(apply map (string-to-char \&quot;bitch ko\&quot;))&quot;, :offset 39, :ns &quot;ld4.core&quot;} {:command &quot;(apply map vector (string-to-char \&quot;bitch ko\&quot;))&quot;, :offset 46, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;))&quot;, :offset 44, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;) \&quot;1\&quot;)&quot;, :offset 48, :ns &quot;ld4.core&quot;} {:command &quot;(vec \&quot;bitch\&quot;)&quot;, :offset 13, :ns &quot;ld4.core&quot;} {:command &quot;(seq (char-array str))&quot;, :offset 22, :ns &quot;ld4.core&quot;} {:command &quot;(string-to-char \&quot;butt\&quot;)&quot;, :offset 23, :ns &quot;ld4.core&quot;} {:command &quot;(defn string-to-char [str]\n  (vec str))&quot;, :offset 39, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;) )&quot;, :offset 45, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;) 1)&quot;, :offset 46, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch ko\&quot;) :1)&quot;, :offset 47, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch ko\&quot;) (1))&quot;, :offset 46, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch ko\&quot;) 1)&quot;, :offset 44, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (string-to-char \&quot;bitch\&quot;) (1 1 1 1 1))&quot;, :offset 53, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (string-to-char \&quot;bitch\&quot;) (1 1 1 1 1))&quot;, :offset 51, :ns &quot;ld4.core&quot;} {:command &quot;(apply zipmap (1 1 1 1 1) (string-to-char \&quot;bitch\&quot;) )&quot;, :offset 52, :ns &quot;ld4.core&quot;} {:command &quot;(apply hash-map (1 1 1 1 1) (string-to-char \&quot;bitch\&quot;) )&quot;, :offset 54, :ns &quot;ld4.core&quot;} {:command &quot;(hash-map (1 1 1 1 1) (string-to-char \&quot;bitch\&quot;) )&quot;, :offset 48, :ns &quot;ld4.core&quot;} {:command &quot;(hash-map #(hash-map % 0) (seq (string-to-char \&quot;bitch\&quot;)) )&quot;, :offset 58, :ns &quot;ld4.core&quot;} {:command &quot;(map #(hash-map % 0) (seq (string-to-char \&quot;bitch\&quot;)) )&quot;, :offset 53, :ns &quot;ld4.core&quot;} {:command &quot;(map #(hash-map % 0)  #(hash-map % 0) (seq (string-to-char \&quot;bitch\&quot;)) )&quot;, :offset 70, :ns &quot;ld4.core&quot;} {:command &quot;(encrypt \&quot;we can do it\&quot; 3)&quot;, :offset 26, :ns &quot;ld4.core&quot;} {:command &quot;(get-encrypt-chars \&quot;we can do it\&quot; 3)&quot;, :offset 36, :ns &quot;ld4.core&quot;} {:command &quot;(sort (get-encrypt-chars \&quot;we can do it\&quot; 3))&quot;, :offset 43, :ns &quot;ld4.core&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration name="Unnamed" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" nameIsGenerated="true">
      <module name="ld4" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7cbfd0b0-3900-4946-a9ff-989745994da4" name="Default Changelist" comment="" />
      <created>1606948813565</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1606948813565</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="2177" y="351" key="#Notifications" timestamp="1607368706079">
      <screen x="1920" y="0" width="1920" height="1080" />
    </state>
    <state x="2177" y="351" key="#Notifications/0.26.1920.1054/1920.0.1920.1080@1920.0.1920.1080" timestamp="1607368706079" />
    <state x="13" y="426" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1606949827563">
      <screen x="0" y="26" width="1920" height="1054" />
    </state>
    <state x="13" y="426" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.26.1920.1054@0.26.1920.1054" timestamp="1606949827563" />
    <state x="1030" y="158" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1607373796830">
      <screen x="0" y="26" width="1920" height="1054" />
    </state>
    <state x="1030" y="158" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.26.1920.1054/1920.0.1920.1080@0.26.1920.1054" timestamp="1607373796830" />
  </component>
</project>